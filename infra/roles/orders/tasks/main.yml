---
- name: Install packages
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - apache2
    - openjdk-8-jre
    - mysql-server
    - mysql-client
    - python-pip
    - libmysqlclient-dev

- name: Install the Python MySQLB module
  pip: name=MySQL-python

- name: Copy the root credentials as .my.cnf file
  template: src=root.cnf.j2 dest=~/.my.cnf mode=0600

- name: Update MySQL root password for all root accounts
  register: root_password
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "{{ mysql_root_pass }}" 
    state: present
  with_items:
    - "{{ ansible_hostname }}"
    - "127.0.0.1"
    - "::1"
    - localhost

- name: Create a new database with name 'orders'
  mysql_db:
    name: orders
    state: present

- name: Setup app mysql user
  register: user_password
  mysql_user:
    name: orders
    host: "{{ item }}"
    priv: "orders.*:ALL" 
    password: "{{ mysql_user_pass }}"
    state: present
  with_items:
    - "127.0.0.1"
    - "localhost"

- name: Ensure Anonymous user(s) are not in the database
  register: anon_user
  mysql_user: 
    name: ''
    host: "{{ item }}"
    state: absent
  with_items:
    - localhost
    - "127.0.0.1"
    - "{{ ansible_hostname }}"

- name: Remove the test database
  register: test_db
  mysql_db:
    name: test
    state: absent

- name: Restart mysql
  when: root_password.changed or anon_user.changed or test_db.changed or user_password.changed
  service:
    name: mysql
    state: restarted

- name: Enable apache proxy modules
  register: apache_mods
  apache2_module:
    state: present
    name: "{{ item }}"
  with_items:
    - proxy
    - proxy_http

- name: Configure apache
  register: apache_conf
  copy:
    src: apache_vhost
    dest: /etc/apache2/sites-enabled/demo.conf

- name: Restart apache
  when: apache_conf.changed or apache_mods.changed
  service:
    name: apache2
    state: restarted

- name: Start apache
  service:
    name: apache2
    state: started
    enabled: yes

- name: Upload systemd service file
  copy:
    src: JavaApp.service
    dest: /etc/systemd/system/JavaApp.service
    owner: root
    group: root
    mode: 0644

- name: Upload restart script
  copy:
    src: restartApp.sh
    dest: /home/ubuntu/restartApp.sh
    owner: ubuntu
    group: ubuntu
    mode: 0700

- user:
    name: orders
    comment: "orders"
    uid: 1337

- name: Set up single authorized key
  authorized_key:
    user: orders
    state: present
    key: '{{ item }}'
  with_file:
    - sshkey.pub
